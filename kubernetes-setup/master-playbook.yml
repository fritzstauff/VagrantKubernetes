---
- hosts: all
  become: true
  tasks:
  - name: Install packages that allow apt to be used over HTTPS
    apt:
      name: "{{ packages }}"
      state: present
      update_cache: yes
    vars:
      packages:
      - apt-transport-https
      - ca-certificates
      - curl
      - gnupg-agent
      - software-properties-common

  - name: Add an apt signing key for Docker
    apt_key:
      url: https://download.docker.com/linux/ubuntu/gpg
      state: present

  - name: Add apt repository for stable version
    apt_repository:
      repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu xenial stable
      state: present

  - name: Install docker and its dependecies
    apt: 
      name: "{{ packages }}"
      state: present
      update_cache: yes
    vars:
      packages:
      - docker-ce 
      - docker-ce-cli 
      - containerd.io

  - name: Setup etc hosts 
    copy:
      src: template/hosts.j2
      dest: /etc/hosts
      group: root
      owner: root
      mode: 0644

  - name: Copy kubernetes perms
    become: false
    copy:
      src: template/{{item}}
      dest: ~/
      group: vagrant
      owner: vagrant
      mode: 0644
    with_items:
      ['k8s-dashboard-admin-user.yaml','rbac-config.yaml']

  - name: Add vagrant user to docker group
    user:
      name: vagrant
      group: docker

  - name: Remove swapfile from /etc/fstab
    mount:
      name: "{{ item }}"
      fstype: swap
      state: absent
    with_items:
      - swap
      - none

  - name: Disable swap
    command: swapoff -a
    when: ansible_swaptotal_mb > 0

  - name: Add an apt signing key for Kubernetes
    apt_key:
      url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
      state: present

  - name: Adding apt repository for Kubernetes
    apt_repository:
      repo: deb https://apt.kubernetes.io/ kubernetes-xenial main
      state: present
      filename: kubernetes.list

  - name: Install Kubernetes binaries
    apt: 
      name: "{{ packages }}"
      state: present
      update_cache: yes
    vars:
      packages:
        - kubelet=1.15.2-00 
        - kubeadm=1.15.2-00
        - kubectl=1.15.2-00

  - name: Ensure kubelet env file exists
    copy:
      content: ""
      dest: /etc/default/kubelet
      force: no
      group: root
      owner: root
      mode: 0644

  - name: Configure node ip
    lineinfile:
      path: /etc/default/kubelet
      line: KUBELET_EXTRA_ARGS=--node-ip={{ node_ip }}

  - name: Restart kubelet
    service:
      name: kubelet
      daemon_reload: yes
      state: restarted

  - name: Initialize the Kubernetes cluster using kubeadm
    command: kubeadm init --apiserver-advertise-address="192.168.50.10" --apiserver-cert-extra-sans="192.168.50.10"  --node-name k8s-master --pod-network-cidr=10.88.0.0/16

  - name: Setup kubeconfig for vagrant user
    command: "{{ item }}"
    with_items:
     - mkdir -p /home/vagrant/.kube
     - cp -i /etc/kubernetes/admin.conf /home/vagrant/.kube/config
     - chown vagrant:vagrant /home/vagrant/.kube/config

  - name: Tweak Kubeconfig 
    become: false
    command: "{{ item }}"
    with_items:
     - kubectl taint nodes --all node-role.kubernetes.io/master-
     - kubectl apply -f https://docs.projectcalico.org/v3.8/manifests/calico.yaml
     - kubectl apply -f https://raw.githubusercontent.com/kubernetes/dashboard/v2.0.0-beta1/aio/deploy/recommended.yaml
     - kubectl apply -f k8s-dashboard-admin-user.yaml
     - kubectl apply -f rbac-config.yaml

  - name: Generate join command
    command: kubeadm token create --print-join-command
    register: join_command

  - name: Copy join command to local file
    become: no
    local_action: copy content="{{ join_command.stdout }}" dest="join-command"
  
  - name: Get Admin token
    become: no
    shell: >
      kubectl -n kube-system describe secret $(kubectl -n kube-system get secret | grep admin-user | awk '{print $1}') | grep token: | awk '{print $2}'
    register: admin_token

  - name: Copy admin token to local file
    become: no
    local_action: copy content="{{admin_token.stdout}}" dest="../admin_token"

  - name: Kube Config
    fetch:
      src: /home/vagrant/.kube/config
      dest: ../
      flat: yes

  handlers:
    - name: docker status
      service: name=docker state=started
