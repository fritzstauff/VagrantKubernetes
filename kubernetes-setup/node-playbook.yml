---
- hosts: all
  become: true
  tasks:
  - name: Install packages that allow apt to be used over HTTPS
    apt:
      name: "{{ packages }}"
      state: present
      update_cache: yes
    vars:
      packages:
      - apt-transport-https
      - ca-certificates
      - curl
      - gnupg-agent
      - software-properties-common

  - name: Setup etc hosts
    copy:
      src: template/hosts.j2
      dest: /etc/hosts
      group: root
      owner: root
      mode: 0644

  - name: Add an apt signing key for Docker
    apt_key:
      url: https://download.docker.com/linux/ubuntu/gpg
      state: present

  - name: Add apt repository for stable version
    apt_repository:
      repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu xenial stable
      state: present

  - name: Install docker and its dependecies
    apt: 
      name: "{{ packages }}"
      state: present
      update_cache: yes
    vars:
      packages:
      - docker-ce=5:18.09.8~3-0~ubuntu-xenial
      - docker-ce-cli=5:18.09.8~3-0~ubuntu-xenial
      - containerd.io

  - name: Setup docker daemon
    copy:
      src: template/daemon.json
      dest: /etc/docker/daemon.json
      group: root
      owner: root
      mode: 0644

  - name: Create a directory if it does not exist
    file:
      path: /etc/systemd/system/docker.service.d
      state: directory
      mode: '0755'
      
  - name: Reload Systemctl
    command: systemctl daemon-reload

  - name: Restart docker
    command: systemctl restart docker

  - name: Add vagrant user to docker group
    user:
      name: vagrant
      group: docker

  - name: Remove swapfile from /etc/fstab
    mount:
      name: "{{ item }}"
      fstype: swap
      state: absent
    with_items:
      - swap
      - none

  - name: Disable swap
    command: swapoff -a
    when: ansible_swaptotal_mb > 0


  - name: Add an apt signing key for Kubernetes
    apt_key:
      url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
      state: present

  - name: Adding apt repository for Kubernetes
    apt_repository:
      repo: deb https://apt.kubernetes.io/ kubernetes-xenial main
      state: present
      filename: kubernetes.list

  - name: Install Kubernetes binaries
    apt: 
      name: "{{ packages }}"
      state: present
      update_cache: yes
    vars:
      packages:
        - kubelet=1.15.2-00 
        - kubeadm=1.15.2-00
        - kubectl=1.15.2-00

  - name: Ensure kubelet env file exists
    copy:
      content: ""
      dest: /etc/default/kubelet
      force: no
      group: root
      owner: root
      mode: 0644

  - name: Configure node ip
    lineinfile:
      path: /etc/default/kubelet
      line: KUBELET_EXTRA_ARGS=--node-ip={{ node_ip }}

  - name: Restart kubelet
    service:
      name: kubelet
      daemon_reload: yes
      state: restarted

#  - name: Initialize the Kubernetes cluster using kubeadm
#    command: kubeadm init --apiserver-advertise-address="192.168.50.10" --apiserver-cert-extra-sans="192.168.50.10"  --kubernetes-version 1.15.2 --pod-network-cidr=192.168.0.0/16

  - name: Copy the join command to server location
    copy: src=join-command dest=/tmp/join-command.sh mode=0777

  - name: Join the node to cluster
    command: sh /tmp/join-command.sh
